<template>
  <view class="todoapp">
      <view class="strong">{{remaining}}</view>
  </view>
</template>

<script>
  import { createComponent } from '@mpxjs/core'
  import store from '../store/index'

  const filters = {
    all: todos => todos,
    active: todos => todos.filter(todo => !todo.done),
    completed: todos => todos.filter(todo => todo.done)
  }
  createComponent({
    data: {
      visibility: 'all',
      filters: Object.keys(filters),
      inputVal: ''
    },
    computed: {
      ...store.mapState(['todos']),
      allChecked () {
        return this.todos.every(todo => todo.done)
      },
      filteredTodos () {
        return filters[this.visibility](this.todos)
      },
      remaining () {
        return filters.active(this.todos).length
      }
    },
    attached () {
      console.log(this.filteredTodos)
    },
    methods: {
      addTodo () {
        const text = this.inputVal
        if (text.trim()) {
          store.commit('addTodo', { text })
        }
        this.inputVal = ''
      },
      toggleAll () {
        store.commit('toggleAll', { done: !this.allChecked })
      },
      ...store.mapMutations([
        'clearCompleted'
      ]),
      setVisibility (filterName) {
        this.visibility = filterName
      }
    }
  })
</script>

<style>
  .todoapp {
    background: #fff;
    margin: 100px 0 40px 0;
    position: relative;
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2),
    0 25px 50px 0 rgba(0, 0, 0, 0.1);
  }


  .info {
    margin: 65px auto 0;
    color: #bfbfbf;
    font-size: 10px;
    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
    text-align: center;
  }

</style>

<script type="application/json">
  {
    "component": true,
    "usingComponents": {
      "todo": "./todo"
    }
  }
</script>
